#include <bits/stdc++.h> 
int solve(int i,int j1,int j2,vector<vector<int>> &grid,vector<vector<vector<int>>> &dp)
{
    if((j1 < 0 || j1>=grid[0].size()) || (j2 < 0 || j2 >= grid[0].size()))
    {
        return -1e8;
    }

    if(i == grid.size()-1)
    {
        if(j1==j2)
        {
            return dp[i][j1][j2] = grid[i][j1];
        }
        else{
            return dp[i][j1][j2] = grid[i][j1] + grid[i][j2];
        }
    }
    if(dp[i][j1][j2] != -1)
    {
        return dp[i][j1][j2];
    }
    int maxi = -1e8;
    for(int d1 = -1;d1 <= +1; d1++)
    {
        for(int d2 = -1;d2 <= +1; d2++)
        {
            
            if(j1==j2) maxi = max(maxi,grid[i][j1]+solve(i+1,j1+d1,j2+d2,grid,dp));
            else{
                maxi = max(maxi,grid[i][j1] + grid[i][j2] + solve(i+1,j1+d1,+j2+d2,grid,dp));
            }
        }
    }

    return dp[i][j1][j2] = maxi;
}
int maximumChocolates(int r, int c, vector<vector<int>> &grid) {
    // Write your code here.
    vector<vector<vector<int>>> dp(r,vector<vector<int>> (c,vector<int> (c,-1)));
    return solve(0,0,c-1,grid,dp);

}
