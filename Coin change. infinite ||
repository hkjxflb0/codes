#include<bits/stdc++.h>

long f(int ind , int tar , int *denominations, vector<vector<long>> &dp){

    if(ind == 0) {

        return (tar % denominations[0] == 0);

    }

    if(dp[ind][tar] != -1) return dp[ind][tar];

    long notpick = f(ind-1, tar, denominations ,dp);

    long pick = 0;

    if(tar >= denominations[ind]) pick = f(ind, tar - denominations[ind], denominations, dp);

 

    return dp[ind][tar] =  pick + notpick;

}

 

long countWaysToMakeChange(int *denominations, int n, int value)

{

    //Write your code here

    vector<vector<long>> dp(n , vector<long> (value+1, -1));

    return f(n-1, value, denominations, dp);

}
